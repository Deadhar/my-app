import { useState, useEffect } from "react";

function Counter() {
    // Создаем состояние для счетчика с начальным значением 0
    const [count, setCount] = useState(0);

    // Хук useEffect, который срабатывает при изменении count
    // Это будет вызываться каждый раз, когда значение count изменяется
    useEffect(() => {
        // Логируем в консоль текущее значение count при каждом изменении
        console.log(`Значение увеличено на ${count}`);
    }, [count]); // [] — массив зависимостей, хук срабатывает при изменении count

    // Второй хук useEffect, который запускается один раз при монтировании компонента
    useEffect(() => {
        // Создаем таймер с задержкой 8 секунд
        const timer = setTimeout(() => {
            console.log('Таймер сработал!');
        }, 8000); // Таймер сработает через 8 секунд

        // Очистка таймера, если компонент будет размонтирован
        return () => clearTimeout(timer);
    }, []); // Пустой массив зависимостей, хук сработает только один раз при монтировании компонента

    // Обработчик клика, который увеличивает значение count на 1
    const handleClick = () => setCount(prev => prev + 1); // Используем предыдущий стейт для безопасного увеличения

    return (
        <div>
            <p>{count}</p> {/* Отображаем текущее значение счетчика */}
            <button onClick={handleClick}>Увеличить</button> {/* Кнопка для увеличения счетчика */}
        </div>
    );
}

export default Counter;