import React, { useState, useEffect } from "react";  // Импортируем React и хуки useState, useEffect

function Tasks() {
    // Создаем состояние data с начальным значением пустого массива,
    // потому что мы ожидаем, что данные, которые получим от сервера, будут массивом объектов.
    const [data, setData] = useState([]);  

    // Используем useEffect для выполнения побочного эффекта — загрузки данных.
    // Эффект будет выполнен только один раз, когда компонент будет смонтирован.
    useEffect(() => {
        fetch('/task.json')  // Отправляем запрос на получение файла task.json, который должен находиться в папке public.
            .then((response) => response.json())  // Преобразуем ответ сервера в JSON.
            .then((data) => setData(data))  // Когда данные загружены, обновляем состояние с полученными данными.
            .catch((error) => console.error("Ошибка загрузки данных:", error));  // Ловим и выводим ошибку в консоль, если что-то пошло не так.
    }, []);  // Пустой массив зависимостей означает, что эффект сработает только при монтировании компонента.

    return (
        <div>
            <ul>
                {data.length > 0 ? (  // Если массив данных не пустой, выводим список.
                    data.map((item) => (  // Для каждого элемента в массиве создаем элемент списка.
                        <li key={item.id}>  // Используем id элемента как уникальный ключ.
                            <strong>{item.title}</strong>  // Выводим заголовок задачи.
                            <div>{item.description}</div>  // Выводим описание задачи.
                        </li>
                    ))
                ) : (
                    <li>Загрузка...</li>  // Если данных нет (массив пуст), показываем сообщение о загрузке.
                )}
            </ul>
        </div>
    );
}

export default Tasks;  // Экспортируем компонент для использования в других частях приложения.